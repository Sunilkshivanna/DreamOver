{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\cricket-gaming-app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase\";\nimport { RecaptchaVerifier, signInWithPhoneNumber, onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [phone, setPhone] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(null);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Check if user is already logged in\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      navigate(\"/dashboard\"); // Auto-redirect if already logged in\n    }\n  });\n  const sendOtp = async () => {\n    try {\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, \"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      const confirmationResult = await signInWithPhoneNumber(auth, phone, window.recaptchaVerifier);\n      setConfirmation(confirmationResult);\n      alert(\"OTP sent successfully!\");\n    } catch (err) {\n      setError(\"Failed to send OTP. Check phone number format.\");\n    }\n  };\n  const verifyOtp = async () => {\n    try {\n      const result = await confirmation.confirm(otp);\n      alert(\"Phone number verified successfully!\");\n      navigate(\"/dashboard\"); // Redirect after successful login\n    } catch (err) {\n      setError(\"Invalid OTP. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phone Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: phone,\n      onChange: e => setPhone(e.target.value),\n      placeholder: \"Enter phone number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendOtp,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: otp,\n      onChange: e => setOtp(e.target.value),\n      placeholder: \"Enter OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: verifyOtp,\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Nl7acQDB534EsgtiSHMXdruQRw8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","auth","RecaptchaVerifier","signInWithPhoneNumber","onAuthStateChanged","jsxDEV","_jsxDEV","Login","_s","phone","setPhone","otp","setOtp","confirmation","setConfirmation","error","setError","navigate","user","sendOtp","window","recaptchaVerifier","size","confirmationResult","alert","err","verifyOtp","result","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","id","_c","$RefreshReg$"],"sources":["C:/Projects/cricket-gaming-app/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../firebase\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst Login = () => {\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [confirmation, setConfirmation] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is already logged in\r\n  onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n      navigate(\"/dashboard\"); // Auto-redirect if already logged in\r\n    }\r\n  });\r\n\r\n  const sendOtp = async () => {\r\n    try {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, \"recaptcha-container\", {\r\n        size: \"invisible\",\r\n      });\r\n      const confirmationResult = await signInWithPhoneNumber(auth, phone, window.recaptchaVerifier);\r\n      setConfirmation(confirmationResult);\r\n      alert(\"OTP sent successfully!\");\r\n    } catch (err) {\r\n      setError(\"Failed to send OTP. Check phone number format.\");\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      const result = await confirmation.confirm(otp);\r\n      alert(\"Phone number verified successfully!\");\r\n      navigate(\"/dashboard\"); // Redirect after successful login\r\n    } catch (err) {\r\n      setError(\"Invalid OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phone Login</h2>\r\n      <input type=\"text\" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Enter phone number\" />\r\n      <button onClick={sendOtp}>Send OTP</button>\r\n\r\n      <input type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)} placeholder=\"Enter OTP\" />\r\n      <button onClick={verifyOtp}>Verify OTP</button>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <div id=\"recaptcha-container\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,iBAAiB,EAAEC,qBAAqB,EAAEC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7F,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;;EAE9B;EACAI,kBAAkB,CAACH,IAAI,EAAGiB,IAAI,IAAK;IACjC,IAAIA,IAAI,EAAE;MACRD,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACFC,MAAM,CAACC,iBAAiB,GAAG,IAAInB,iBAAiB,CAACD,IAAI,EAAE,qBAAqB,EAAE;QAC5EqB,IAAI,EAAE;MACR,CAAC,CAAC;MACF,MAAMC,kBAAkB,GAAG,MAAMpB,qBAAqB,CAACF,IAAI,EAAEQ,KAAK,EAAEW,MAAM,CAACC,iBAAiB,CAAC;MAC7FP,eAAe,CAACS,kBAAkB,CAAC;MACnCC,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZT,QAAQ,CAAC,gDAAgD,CAAC;IAC5D;EACF,CAAC;EAED,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMd,YAAY,CAACe,OAAO,CAACjB,GAAG,CAAC;MAC9Ca,KAAK,CAAC,qCAAqC,CAAC;MAC5CP,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZT,QAAQ,CAAC,gCAAgC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEV,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAE1B,KAAM;MAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/G3B,OAAA;MAAQkC,OAAO,EAAErB,OAAQ;MAAAU,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3C3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,GAAI;MAACyB,QAAQ,EAAGC,CAAC,IAAKzB,MAAM,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClG3B,OAAA;MAAQkC,OAAO,EAAEd,SAAU;MAAAG,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE9ClB,KAAK,iBAAIT,OAAA;MAAGmC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD3B,OAAA;MAAKqC,EAAE,EAAC;IAAqB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAlDID,KAAK;EAAA,QAKQP,WAAW;AAAA;AAAA4C,EAAA,GALxBrC,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}